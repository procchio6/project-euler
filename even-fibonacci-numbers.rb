# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def sum_even_fibonacci_numbers(num)
  even_fibonacci_numbers = fibonacci_numbers(num).select{|number| number.even?}
  even_fibonacci_numbers.inject(:+)
end

def fibonacci_numbers(num)
  fibonacci_numbers = [1,2]
  while fibonacci_numbers.last < num
    fibonacci_numbers << fibonacci_numbers[-1] + fibonacci_numbers[-2]
  end
  fibonacci_numbers.pop
  fibonacci_numbers
end

puts sum_even_fibonacci_numbers(4000000)
